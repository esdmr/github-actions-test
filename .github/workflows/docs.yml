name: Documentation
concurrency: docs

on:
  push:
    branches:
      - master
      - releases/**

env:
  GIT_AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
  GIT_AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
  GIT_COMMITTER_NAME: github-actions[bot]
  GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  JOB_NODE_VERSION: 16.x
  JOB_PNPM_VERSION: "6.9.0"
  JOB_RUBY_VERSION: "2.7"
  JOB_DOCS_BRANCH: docs
  JOB_COMMIT_MESSAGE: |-
    ${{ github.event.head_commit.message }}

    Original-commit: ${{ github.event.head_commit.url }}

defaults:
  run:
    shell: fish {0}

jobs:
  update:
    name: Update documentation
    runs-on: ubuntu-latest

    outputs:
      should_skip_deployment: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - name: Install fish
        uses: fish-actions/install-fish@v1.1.0

      - name: Find current branch
        run: |-
          set JOB_CURR_BRANCH (string replace -r '^refs/heads/' '' $GITHUB_REF)
          echo JOB_CURR_BRANCH=$JOB_CURR_BRANCH >>$GITHUB_ENV
          echo Current branch is $JOB_CURR_BRANCH

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: source

      - name: Create documentation branch if non-existent
        uses: esdmr/action-create-branch@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ env.JOB_DOCS_BRANCH }}
          orphan: true

      - name: Checkout documentation branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.JOB_DOCS_BRANCH }}
          path: docs

      - name: Use Node.js ${{ env.JOB_NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.JOB_NODE_VERSION }}

      - name: Use PNPM ${{ env.JOB_PNPM_VERSION }}
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ${{ env.JOB_PNPM_VERSION }}

      - name: Set PNPM StoreDir
        run: pnpm config set store-dir ~/.pnpm-store

      - name: Cache PNPM modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('source/pnpm-lock.yaml') }}

      - name: Build documentation
        working-directory: source
        run: fish .github/scripts/build-docs.fish

      - name: Add front-matter for every file
        working-directory: source/build/docs
        run: |-
          for filename in **.md
            sed -i "1i ---\\
          parent: $JOB_CURR_BRANCH\\
          ---" $filename
            echo Modified $filename
          end

      - name: Create index for documentation
        working-directory: source
        run: |-
          echo --- >build/docs/index.md

          set nav_order (
            if test $JOB_CURR_BRANCH = master
              echo 2
            else
              set releases_match (string match -r '^releases/(\d+)' $JOB_CURR_BRANCH)
              math 10 + $releases_match[2]
            end
          )

          echo nav_order: $nav_order >>build/docs/index.md
          echo Page order is $nav_order

          echo "title: $JOB_CURR_BRANCH
          has_children: true
          ---
          # $JOB_CURR_BRANCH

          From commit [${{ github.event.head_commit.id }}](${{ github.event.head_commit.url }})" >>build/docs/index.md
          echo Wrote index.md

      - name: Copy folders to the documentation branch
        run: |-
          rm -vrf docs/$JOB_CURR_BRANCH/
          mkdir -vp docs/$JOB_CURR_BRANCH/
          mv -v source/build/docs/* docs/$JOB_CURR_BRANCH

      - name: Commit changes
        working-directory: docs
        run: |-
          git add --all .
          git commit --author "$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>" --message $JOB_COMMIT_MESSAGE

      - name: Push changes
        working-directory: docs
        run: git push origin $JOB_DOCS_BRANCH

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          cancel_others: true
          skip_after_successful_duplicate: false
          concurrent_skipping: outdated_runs

  deploy:
    name: Deploy Docs
    runs-on: ubuntu-latest
    needs: update
    if: success() && needs.update.outputs.should_skip_deployment != 'true'

    steps:
      - name: Check GitHub Pages status
        uses: crazy-max/ghaction-github-status@v2.2.0
        with:
          pages_threshold: major_outage

      - name: fish-actions/install-fish
        uses: fish-actions/install-fish@v1.1.0

      - name: Checkout branch master
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Checkout docs branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.JOB_DOCS_BRANCH }}
          path: docs

      - name: Copy template to docs
        run: mv -v master/.github/pages-template/* docs

      - name: Write README to docs
        run: |-
          echo '---
          nav_order: 1
          ---' >docs/index.md
          cat master/README.md >>docs/index.md
          echo Wrote index.md

      - name: Use Node.js ${{ env.JOB_NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.JOB_NODE_VERSION }}

      - name: Use PNPM ${{ env.JOB_PNPM_VERSION }}
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ${{ env.JOB_PNPM_VERSION }}

      - name: Set PNPM StoreDir
        run: pnpm config set store-dir ~/.pnpm-store

      - name: Cache PNPM modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('docs/_lib/pnpm-lock.yaml') }}

      - name: Install libraries
        working-directory: docs/_lib
        run: pnpm install

      - name: Copy libraries
        working-directory: docs
        run: |-
          function copy_lib
            mkdir -vp lib/$argv[1]
            mv -v _lib/node_modules/$argv[1]/$argv[2] lib/$argv[1]/$argv[2]
          end

          copy_lib katex LICENSE
          copy_lib katex/dist fonts
          copy_lib katex/dist katex.min.css
          copy_lib katex/dist katex.min.js
          copy_lib katex/dist/contrib auto-render.min.js

      - name: Remove installed libraries
        working-directory: docs
        run: rm -vr _lib

      - name: Setup Ruby ${{ env.JOB_RUBY_VERSION }}
        uses: ruby/setup-ruby@v1.77.0
        with:
          working-directory: docs
          ruby-version: ${{ env.JOB_RUBY_VERSION }}
          bundler: Gemfile.lock
          bundler-cache: true

      - name: Build jekyll
        working-directory: docs
        run: bundler exec jekyll build

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2.5.0
        with:
          target_branch: gh-pages
          build_dir: docs/_site
          committer: ${{ env.GIT_COMMITTER_NAME }} <${{ env.GIT_COMMITTER_EMAIL }}>
          author: ${{ env.GIT_AUTHOR_NAME }} <${{ env.GIT_AUTHOR_EMAIL }}>
          jekyll: false
          commit_message: ${{ env.JOB_COMMIT_MESSAGE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
